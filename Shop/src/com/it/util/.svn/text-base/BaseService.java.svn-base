package com.zinglabs.base.core.frame;

import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.zinglabs.base.core.springSupport.impl.AppSqlSession;
import com.zinglabs.base.core.springSupport.impl.AppSqlSessionDbid;
import com.zinglabs.base.core.utils.AppSpringUtils;
import com.zinglabs.log.LogUtil;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
//import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;


public abstract class BaseService {
	public static Logger SKIP_Logger = LoggerFactory.getLogger("ZDesk");
	public static ApplicationContext serviceContext;
	public ApplicationContext serviceApplicationContext;
	private ServletRequest request;
	
	public ServletRequest getRequest() {
		return request;
	}

	public void setRequest(ServletRequest request) {
		this.request = request;
	}
	

	
	
	public Object getBean(String id){
		if(id!=null && id.length()>0 ){
			ApplicationContext context= AppSpringUtils.getApplicationContext();
			if(context!=null){
				return context.getBean(id);
			}else{
				LogUtil.error("BaseService ApplicationContext is null", SKIP_Logger);
//				if(serviceContext==null){
//					contextInit();
//				}
//				if(request!=null){
//					ApplicationContext ctx=AppSpringUtils.getContextAsRequest(request);
//					if(ctx!=null){
//						return ctx.getBean(id);
//					}
//				}
//				return serviceContext.getBean(id);
			}
		}
		return null;
	}
	
	/**
	 *  * 拼装通用逻辑插入参数
	 * 原理：数据库插入语句的field与value由传入参数map的KEY与value确定。
	 * @param map 原始参数
	 * @param useid	是否拼装ID，否false，是true
	 * @return
	 */
	public Map spellMyIbatisInsertMap(Map map,boolean useid){
		if(map!=null){
			Map<String,Object> dMap=new HashMap<String,Object>();
			List<String> fields=new ArrayList<String>();
			List<String> values=new ArrayList<String>();
			Iterator<Map.Entry<String, String>> it=map.entrySet().iterator();
			while(it.hasNext()){
				Map.Entry<String,String> e=it.next();
				if(e.getKey()==null || e.getKey().length()<=0 || e.getKey().equals("zkm_userName") || e.getKey().equals("r")){
					continue;
				}else if(!useid && e.getKey().equals("id")){
					continue;
				}
				String key=e.getKey();
				String value=e.getValue()==null?"":e.getValue();
				fields.add(key);
				values.add(value);
				dMap.put(key, value);
			}
			dMap.put("appFrameInsertfields", fields);
			dMap.put("appFrameInsertvalues", values);
			return dMap;
		}
		return map;
	}
	/**
	 *  拼装通用逻辑更新参数
	 * 原理：数据库插入语句的field与value由传入参数map的KEY与value确定。
	 * @param map
	 * @return
	 */
	public Map spellMyIbatisUpdateMap(Map map){
		if(map!=null){
			Map<String,Object> dMap=new HashMap<String,Object>();
			List<String> fields=new ArrayList<String>();
			Iterator<Map.Entry<String, String>> it=map.entrySet().iterator();
			while(it.hasNext()){
				Map.Entry<String,String> e=it.next();
				if(e.getKey()==null || e.getKey().length()<=0 || e.getKey().equals("zkm_userName") || e.getKey().equals("r")){
					continue;
				}
				String key=e.getKey();
				String value=e.getValue()==null?"":e.getValue();
				fields.add(key);
				dMap.put(key, value);
			}
			dMap.put("appFrameUpdatefields", fields);
			dMap.put("appFrameUpdatevalues", map);
			return dMap;
		}
		return map;
	}
	
	/**
	 *  拼装通用逻辑查询参数
	 * 原理：数据库插入语句的field与value由传入参数map的KEY与value确定。
	 * @param map
	 * @return
	 */
	public Map spellMyIbatisSelectMap(Map map){
		if(map!=null){
			Map<String,Object> dMap=new HashMap<String,Object>();
			List<String> fields=new ArrayList<String>();
			Iterator<Map.Entry<String, String>> it=map.entrySet().iterator();
			while(it.hasNext()){
				Map.Entry<String,String> e=it.next();
				if(e.getKey()==null || e.getKey().length()<=0 || e.getKey().equals("zkm_userName") || e.getKey().equals("r")){
					continue;
				}
				String key=e.getKey();
				String value=e.getValue()==null?"":e.getValue();
				fields.add(key);
				dMap.put(key, value);
			}
			dMap.put("appFrameSelectfields", fields);
			dMap.put("appFrameSelectvalues", map);
			return dMap;
		}
		return map;
	}
	
	public void postStrToClient(String json, HttpServletResponse response) {
		try {
			response.setContentType("text/html;charset=UTF-8");
			PrintWriter pw = response.getWriter();
			pw.write(json);
			pw.flush();
			pw.close();
		} catch (Exception x) {
			LogUtil.error(x, SKIP_Logger);
		}
	}
	
	public abstract AppSqlSessionDbid getServiceSqlSession();

}
